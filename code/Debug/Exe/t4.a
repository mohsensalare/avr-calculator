;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 02/04/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8/000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;
;unsigned char y[16],w[16],o[16];
;unsigned char read=20,sum=0,q;
;unsigned int l,p,j=0,t,k;
;unsigned int r;
;
;unsigned char calculat(void){
; 0000 0025 unsigned char calculat(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026     PORTD.7=0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0027     delay_ms(2);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0028     if(PIND.0==0){
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0029         q=21;lcd_putchar('/');
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002A         delay_ms(300); }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002B     if(PIND.1==0){
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002C         q=22;lcd_putchar('*');
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002D         delay_ms(300);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002E         }
; 0000 002F     if(PIND.2==0){
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0030         q=23;lcd_putchar('-');
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0031         delay_ms(300);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0032     }
; 0000 0033     if(PIND.3==0){
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0034         q=24;lcd_putchar('+');
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0035         delay_ms(300);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0036         }
; 0000 0037     PORTD.7=1;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0038     return q;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0039 }
;PCODE: $00000040 VOL: 0
;
;unsigned char keyboard(void)
; 0000 003C {
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003D     read=20;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003E     PORTD.4=0;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003F     delay_ms(2);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0040     if(PIND.0==0)
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0041         read=7;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0042     if(PIND.1==0)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0043         read=4;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0044     if(PIND.2==0)
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0045         read=1;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0046     if(PIND.3==0){
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0047         lcd_clear();
;PCODE: $0000005F VOL: 0
; 0000 0048         read=20;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0049         sum=0;
;PCODE: $00000062 VOL: 0
; 0000 004A         q=0;
;PCODE: $00000063 VOL: 0
; 0000 004B         l=0;
;PCODE: $00000064 VOL: 0
; 0000 004C         p=0;
;PCODE: $00000065 VOL: 0
; 0000 004D         j=0;
;PCODE: $00000066 VOL: 0
; 0000 004E         t=0;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 004F     }
; 0000 0050     PORTD.4=1;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0051 
; 0000 0052     PORTD.5=0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0053     delay_ms(2);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0054     if(PIND.0==0)
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0055         read=8;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0056     if(PIND.1==0)
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0057         read=5;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0058     if(PIND.2==0)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0059         read=2;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 005A     if(PIND.3==0)
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 005B         read=0;
;PCODE: $00000086 VOL: 0
; 0000 005C     PORTD.5=1;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 005D 
; 0000 005E     PORTD.6=0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 005F     delay_ms(2);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0060     if(PIND.0==0)
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0061         read=9;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0062     if(PIND.1==0)
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0063         read=6;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0064     if(PIND.2==0)
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0065         read=3;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0066     if(PIND.3==0){
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0067         lcd_gotoxy(t+1,0);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0068         lcd_putchar('=');
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0069         delay_ms(300);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 006A         sum=25;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 006B     }
; 0000 006C     PORTD.6=1;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006D     return read;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006E }
;PCODE: $000000B4 VOL: 0
;
;void main(void)
; 0000 0071 {
;PCODE: $000000B5 VOL: 0
; 0000 0072 // Declare your local variables here
; 0000 0073 
; 0000 0074 // Input/Output Ports initialization
; 0000 0075 // Port C initialization
; 0000 0076 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0077 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0078 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0079 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 007A 
; 0000 007B // Port D initialization
; 0000 007C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 007D DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 007E // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 007F PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0080 
; 0000 0081 
; 0000 0082 // External Interrupt(s) initialization
; 0000 0083 // INT0: Off
; 0000 0084 // INT1: Off
; 0000 0085 // INT2: Off
; 0000 0086 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0087 MCUCSR=(0<<ISC2);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0088 
; 0000 0089 // USART initialization
; 0000 008A // USART disabled
; 0000 008B UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 008C 
; 0000 008D // Analog Comparator initialization
; 0000 008E // Analog Comparator: Off
; 0000 008F // The Analog Comparator's positive input is
; 0000 0090 // connected to the AIN0 pin
; 0000 0091 // The Analog Comparator's negative input is
; 0000 0092 // connected to the AIN1 pin
; 0000 0093 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0094 SFIOR=(0<<ACME);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0095 
; 0000 0096 // ADC initialization
; 0000 0097 // ADC disabled
; 0000 0098 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0099 
; 0000 009A // SPI initialization
; 0000 009B // SPI disabled
; 0000 009C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 009D 
; 0000 009E // TWI initialization
; 0000 009F // TWI disabled
; 0000 00A0 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00A1 
; 0000 00A2 // Alphanumeric LCD initialization
; 0000 00A3 // Connections are specified in the
; 0000 00A4 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00A5 // RS - PORTC Bit 0
; 0000 00A6 // RD - PORTC Bit 1
; 0000 00A7 // EN - PORTC Bit 2
; 0000 00A8 // D4 - PORTC Bit 4
; 0000 00A9 // D5 - PORTC Bit 5
; 0000 00AA // D6 - PORTC Bit 6
; 0000 00AB // D7 - PORTC Bit 7
; 0000 00AC // Characters/line: 16
; 0000 00AD lcd_init(16);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00AE lcd_clear();
;PCODE: $000000D0 VOL: 0
; 0000 00AF while (1)
;PCODE: $000000D1 VOL: 0
; 0000 00B0       {
; 0000 00B1        lcd_gotoxy(0 , 1 );
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00B2        lcd_putsf("REZA HOSSEINI");
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00B3        lcd_gotoxy(0 , 0 );
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00B4        read=keyboard();
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00B5 
; 0000 00B6         if((read!=20) && (read<10) && (q<=21)&&(k!=6)) {
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00B7         l=l*10+read;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00B8         sprintf(y,"%d",read);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00B9         lcd_gotoxy(t,0);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00BA         lcd_puts(y);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00BB         delay_ms(300);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00BC         t++;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00BD         }
; 0000 00BE 
; 0000 00BF         lcd_gotoxy(t , 0 );
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00C0         calculat();
;PCODE: $00000114 VOL: 0
; 0000 00C1 
; 0000 00C2         read=keyboard();
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00C3         if((read!=20) && (read<10) && (q>=21)) {
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00C4         p=p*10+read;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00C5         sprintf(w,"%d",read);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00C6         lcd_gotoxy(t+1,0);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00C7         lcd_puts(w);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00C8         delay_ms(300);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00C9         t++;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00CA         k=6;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00CB         }
; 0000 00CC 
; 0000 00CD         if(sum==25){
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00CE         lcd_gotoxy(t+2,0);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00CF         if(q==21)  r=l/p;       //(/)
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00D0         if(q==22)  r=l*p;       //(*)
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00D1         if(q==23)  r=l-p;       //(-)
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00D2         if(q==24)  r=l+p;       //(+)
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00D3         sprintf(o, "%d",r);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00D4         lcd_puts(o);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00D5         delay_ms(300);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00D6         sum=0;
;PCODE: $0000017E VOL: 0
; 0000 00D7 }
; 0000 00D8 }
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00D9 }
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;
